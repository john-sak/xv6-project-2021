Κατά την κλήση της fork() καλείται η συνάρτηση uvmcopy() για να αντιγράψει τις user pages της parent στην child διεργασία. Η συνάρτηση αυτή τροποιήθηκε, έτσι ώστε αντί να γίνει αντιγραφή φυσικών σελίδων, να οριστούν τα αντίστοιχα PTEs στον pagetable της child διεργασίας ώστε να δείχνουν στις ίδιες φυσικές σελίδες με την parent διεργασία. Οι PTEs και των δυο διεργασιών αλλάζουν ώστε να μην έχουν write access. Επίσης, ο reference counter (*) της συγκεκριμένης φυσικής σελίδας αυξάνεται κατά 1, αφού τώρα μία επιπλέον διεργασία διαβάζει την ίδια φυσική σελίδα.

Όταν μια διεργασία επιχειρήσει να γράψει σε μία read-only (COW) σελίδα, δημιουργείται ένα page fault με κωδικό 15. Η συνάρτηση usertrap() τροποποιήθηκε για να εντοπίζει τις περιπτώσεις αυτές και να τις αντιμετωπίζει. Συγκεκριμένα, από το virtual address της σελίδας που δημιούργησε το σφάλμα και τον pagetable της αντίστοιχης διεργασίας βρίσκεται το κατάλληλο PTE. Αφού ελεγχθεί ότι πρόκειται όντως για μια COW σελίδα (τα PTE_V και PTE_U bits είναι set, αλλά το PTE_W όχι), βρίσκονται η physical address και τα flags της. Στη συνέχεια, μία νέα σελίδα δημιουργείται μέσω της kalloc(), η παλία (COW) σελίδα αντιγράφεται στην καινούργια και το παλιό PTE στον pagetable της διεργασίας αντικαθιστάται από ένα καινούργιο που δείχνει στην καινούργια σελίδα και έχει write access σε αυτή. Επιπλέον, ο reference counter της COW σελίδας μειώνεται κατά 1.

Τέλος, τροποποιήθηκε η συνάρτηση copyout() για να διαχειρίζεται και COW σελίδες. Από το virtual address μίας σελίδας και τον pagetable της αντίστοιχης διεργασίας βρίσκεται το κατάλληλο PTE. Αφού γίνουν οι απαραίτητοι έλεγχοι, αν η σελίδα που αντιγράφεται είναι όντως COW, ακολουθείται η ίδια διαδικασία που ακολουθείται και όταν μία διεργασία επιχειρεί να γράψει σε μία COW σελίδα.

(*)	Στο αρχείο kernel/kalloc.c δημιουργείται ένα struct το οποίο (εκτός από το αντίστοιχο lock) περιέχει έναν πίνακα ακεραίων μεγέθους PHYSTOP/PGSIZE (όσες και οι διαθέσιμες σελίδες). Στον πίνακα αυτόν αποθηκεύεται ένας reference counter για κάθε σελίδα που χρησιμοποιείται. Με αυτόν τον τρόπο είναι γνωστό πόσες διεργασίες διαβάζουν από μία συγκεκριμένη σελίδα κάθε χρονική στιγμή. Για την αύξηση και τη μείωση του μετρητή αυτού, δημιουργήθηκαν δύο συναρτήσεις refINC() και refDEC() αντίστοιχα. Ο μετρητής κάθε σελίδας αρχικοποιείται με την τιμή 0 (**) και αυξάνονται κατά 1, όταν μία σελίδα γίνει διαθέσιμη σε μία διεργασία μέσω της kalloc(). Ο μετρητής μειώνεται κατά 1, όταν καλείται η kfree() (***) για μία σελίδα (που σημαίνει ότι μία λιγότερη διεργασία διαβάζει από μία συγκεκριμένη σελίδα).

(**) 	Οι reference counters όλων των σελίδων αρχικοποιούνται με την τιμή 1 μέσα στη συνάρτηση freerange() και αμέσως μετά μειώνονται στην σωστή αρχική τους τιμή (0), αφού καλείται η συνάρτηση kfree().

(***)	Η συνάρτηση kfree() τροποποιήθηκε και η πρώτη δουλειά της είναι να μειώνει κατά 1 τον reference counter της σελίδας που απελευθερώνεται. Μόνο όταν ο μετρητής αυτός γίνει ίσος με 0, η σελίδα επιστρέφεται στη λίστα των κενών διαθέσιμων σελίδων.

Σακαρέλλος Ιωάννης
sdi1800167